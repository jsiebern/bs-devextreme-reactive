// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Js_option = require("bs-platform/lib/js/js_option.js");
var Js_boolean = require("bs-platform/lib/js/js_boolean.js");
var Js_mapperRt = require("bs-platform/lib/js/js_mapperRt.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");
var Grid = require("@devexpress/dx-react-grid-bootstrap4/Grid");
var Table = require("@devexpress/dx-react-grid-bootstrap4/Table");
var Toolbar = require("@devexpress/dx-react-grid-bootstrap4/Toolbar");
var PagingPanel = require("@devexpress/dx-react-grid-bootstrap4/PagingPanel");
var SearchPanel = require("@devexpress/dx-react-grid-bootstrap4/SearchPanel");
var TableEditRow = require("@devexpress/dx-react-grid-bootstrap4/TableEditRow");
var VirtualTable = require("@devexpress/dx-react-grid-bootstrap4/VirtualTable");
var ColumnChooser = require("@devexpress/dx-react-grid-bootstrap4/ColumnChooser");
var GroupingPanel = require("@devexpress/dx-react-grid-bootstrap4/GroupingPanel");
var TableGroupRow = require("@devexpress/dx-react-grid-bootstrap4/TableGroupRow");
var TableFilterRow = require("@devexpress/dx-react-grid-bootstrap4/TableFilterRow");
var TableHeaderRow = require("@devexpress/dx-react-grid-bootstrap4/TableHeaderRow");
var TableRowDetail = require("@devexpress/dx-react-grid-bootstrap4/TableRowDetail");
var TableSelection = require("@devexpress/dx-react-grid-bootstrap4/TableSelection");
var TableEditColumn = require("@devexpress/dx-react-grid-bootstrap4/TableEditColumn");
var DragDropProvider = require("@devexpress/dx-react-grid-bootstrap4/DragDropProvider");
var TableColumnResizing = require("@devexpress/dx-react-grid-bootstrap4/TableColumnResizing");
var TableColumnReordering = require("@devexpress/dx-react-grid-bootstrap4/TableColumnReordering");
var TableColumnVisibility = require("@devexpress/dx-react-grid-bootstrap4/TableColumnVisibility");

function unwrapValue(param) {
  var variant = param[0];
  if (variant >= 758940238) {
    if (variant !== 770676513) {
      if (variant >= 1034997432) {
        throw [
              Caml_builtin_exceptions.assert_failure,
              [
                "GridBootstrap4.re",
                21,
                21
              ]
            ];
      } else {
        return param[1];
      }
    } else {
      throw [
            Caml_builtin_exceptions.assert_failure,
            [
              "GridBootstrap4.re",
              20,
              16
            ]
          ];
    }
  } else if (variant !== -908856609) {
    if (variant >= 737456202) {
      return Js_boolean.to_js_boolean(param[1]);
    } else {
      return param[1];
    }
  } else {
    throw [
          Caml_builtin_exceptions.assert_failure,
          [
            "GridBootstrap4.re",
            19,
            18
          ]
        ];
  }
}

function convertMessages(madeObj) {
  var returnObj = { };
  if (madeObj) {
    returnObj["showColumnChooser"] = madeObj[0]["showColumnChooser"];
  }
  return /* Some */[returnObj];
}

function make(overlayComponent, containerComponent, itemComponent, toggleButtonComponent, messages, children) {
  var tmp = { };
  if (overlayComponent) {
    tmp.overlayComponent = overlayComponent[0];
  }
  if (containerComponent) {
    tmp.containerComponent = containerComponent[0];
  }
  if (itemComponent) {
    tmp.itemComponent = itemComponent[0];
  }
  if (toggleButtonComponent) {
    tmp.toggleButtonComponent = toggleButtonComponent[0];
  }
  var tmp$1 = convertMessages(messages);
  if (tmp$1) {
    tmp.messages = tmp$1[0];
  }
  return ReasonReact.wrapJsForReason(ColumnChooser.default, tmp, children);
}

var ColumnChooser$1 = /* module */[
  /* convertMessages */convertMessages,
  /* make */make
];

function make$1(containerComponent, columnComponent, children) {
  var tmp = { };
  if (containerComponent) {
    tmp.containerComponent = containerComponent[0];
  }
  if (columnComponent) {
    tmp.columnComponent = columnComponent[0];
  }
  return ReasonReact.wrapJsForReason(DragDropProvider.default, tmp, children);
}

var DragDropProvider$1 = /* module */[/* make */make$1];

function convertRjgb(madeObj) {
  var returnObj = { };
  returnObj["name"] = madeObj["name"];
  returnObj["title"] = madeObj["title"];
  returnObj["getCellValue"] = madeObj["getCellValue"];
  return returnObj;
}

function make$2(rows, getRowId, getCellValue, columns, rootComponent, children) {
  var tmp = { };
  if (rows) {
    tmp.rows = rows[0];
  }
  if (getRowId) {
    tmp.getRowId = getRowId[0];
  }
  if (getCellValue) {
    tmp.getCellValue = getCellValue[0];
  }
  if (columns) {
    tmp.columns = columns[0];
  }
  if (rootComponent) {
    tmp.rootComponent = rootComponent[0];
  }
  return ReasonReact.wrapJsForReason(Grid.default, tmp, children);
}

var Grid$1 = /* module */[
  /* convertRjgb */convertRjgb,
  /* make */make$2
];

var jsMapperConstantArray = /* array */[
  /* tuple */[
    3258129,
    "asc"
  ],
  /* tuple */[
    759138929,
    "desc"
  ]
];

function sortingDirection_rty5ToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray);
}

function sortingDirection_rty5FromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray, param);
}

var jsMapperConstantArray$1 = /* array */[
  /* tuple */[
    3258129,
    "asc"
  ],
  /* tuple */[
    759138929,
    "desc"
  ]
];

function rqpw_r7xqToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray$1);
}

function rqpw_r7xqFromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray$1, param);
}

function convertMessages$1(madeObj) {
  var returnObj = { };
  if (madeObj) {
    returnObj["groupByColumn"] = madeObj[0]["groupByColumn"];
  }
  return /* Some */[returnObj];
}

function make$3(showSortingControls, showGroupingControls, layoutComponent, containerComponent, itemComponent, emptyMessageComponent, messages, children) {
  var tmp = { };
  var tmp$1 = Js_option.map(Js_boolean.to_js_boolean, showSortingControls);
  if (tmp$1) {
    tmp.showSortingControls = tmp$1[0];
  }
  var tmp$2 = Js_option.map(Js_boolean.to_js_boolean, showGroupingControls);
  if (tmp$2) {
    tmp.showGroupingControls = tmp$2[0];
  }
  if (layoutComponent) {
    tmp.layoutComponent = layoutComponent[0];
  }
  if (containerComponent) {
    tmp.containerComponent = containerComponent[0];
  }
  if (itemComponent) {
    tmp.itemComponent = itemComponent[0];
  }
  if (emptyMessageComponent) {
    tmp.emptyMessageComponent = emptyMessageComponent[0];
  }
  var tmp$3 = convertMessages$1(messages);
  if (tmp$3) {
    tmp.messages = tmp$3[0];
  }
  return ReasonReact.wrapJsForReason(GroupingPanel.default, tmp, children);
}

var GroupingPanel$1 = /* module */[
  /* sortingDirection_rty5ToJs */sortingDirection_rty5ToJs,
  /* sortingDirection_rty5FromJs */sortingDirection_rty5FromJs,
  /* rqpw_r7xqToJs */rqpw_r7xqToJs,
  /* rqpw_r7xqFromJs */rqpw_r7xqFromJs,
  /* convertMessages */convertMessages$1,
  /* make */make$3
];

function convertMessages$2(madeObj) {
  var returnObj = { };
  if (madeObj) {
    var madeObj$1 = madeObj[0];
    returnObj["showAll"] = madeObj$1["showAll"];
    returnObj["rowsPerPage"] = madeObj$1["rowsPerPage"];
    returnObj["info"] = madeObj$1["info"];
  }
  return /* Some */[returnObj];
}

function make$4(pageSizes, containerComponent, messages, children) {
  var tmp = { };
  if (pageSizes) {
    tmp.pageSizes = pageSizes[0];
  }
  if (containerComponent) {
    tmp.containerComponent = containerComponent[0];
  }
  var tmp$1 = convertMessages$2(messages);
  if (tmp$1) {
    tmp.messages = tmp$1[0];
  }
  return ReasonReact.wrapJsForReason(PagingPanel.default, tmp, children);
}

var PagingPanel$1 = /* module */[
  /* convertMessages */convertMessages$2,
  /* make */make$4
];

function convertMessages$3(madeObj) {
  var returnObj = { };
  if (madeObj) {
    returnObj["searchPlaceholder"] = madeObj[0]["searchPlaceholder"];
  }
  return /* Some */[returnObj];
}

function make$5(inputComponent, messages, children) {
  var tmp = { };
  if (inputComponent) {
    tmp.inputComponent = inputComponent[0];
  }
  var tmp$1 = convertMessages$3(messages);
  if (tmp$1) {
    tmp.messages = tmp$1[0];
  }
  return ReasonReact.wrapJsForReason(SearchPanel.default, tmp, children);
}

var SearchPanel$1 = /* module */[
  /* convertMessages */convertMessages$3,
  /* make */make$5
];

function make$6(order, defaultOrder, onOrderChange, tableContainerComponent, rowComponent, cellComponent, children) {
  var tmp = { };
  if (order) {
    tmp.order = order[0];
  }
  if (defaultOrder) {
    tmp.defaultOrder = defaultOrder[0];
  }
  if (onOrderChange) {
    tmp.onOrderChange = onOrderChange[0];
  }
  if (tableContainerComponent) {
    tmp.tableContainerComponent = tableContainerComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  return ReasonReact.wrapJsForReason(TableColumnReordering.default, tmp, children);
}

var TableColumnReordering$1 = /* module */[/* make */make$6];

function convertRprr(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["width"] = madeObj["width"];
  return returnObj;
}

function convertRj6i(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["width"] = madeObj["width"];
  return returnObj;
}

function make$7(defaultColumnWidths, columnWidths, onColumnWidthsChange, children) {
  var tmp = { };
  if (defaultColumnWidths) {
    tmp.defaultColumnWidths = defaultColumnWidths[0];
  }
  if (columnWidths) {
    tmp.columnWidths = columnWidths[0];
  }
  if (onColumnWidthsChange) {
    tmp.onColumnWidthsChange = onColumnWidthsChange[0];
  }
  return ReasonReact.wrapJsForReason(TableColumnResizing.default, tmp, children);
}

var TableColumnResizing$1 = /* module */[
  /* convertRprr */convertRprr,
  /* convertRj6i */convertRj6i,
  /* make */make$7
];

function convertMessages$4(madeObj) {
  var returnObj = { };
  if (madeObj) {
    returnObj["noColumns"] = madeObj[0]["noColumns"];
  }
  return /* Some */[returnObj];
}

function convertRhhd(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["togglingEnabled"] = madeObj["togglingEnabled"];
  return returnObj;
}

function make$8(hiddenColumnNames, defaultHiddenColumnNames, emptyMessageComponent, onHiddenColumnNamesChange, messages, columnExtensions, columnTogglingEnabled, children) {
  var tmp = { };
  if (hiddenColumnNames) {
    tmp.hiddenColumnNames = hiddenColumnNames[0];
  }
  if (defaultHiddenColumnNames) {
    tmp.defaultHiddenColumnNames = defaultHiddenColumnNames[0];
  }
  if (emptyMessageComponent) {
    tmp.emptyMessageComponent = emptyMessageComponent[0];
  }
  if (onHiddenColumnNamesChange) {
    tmp.onHiddenColumnNamesChange = onHiddenColumnNamesChange[0];
  }
  var tmp$1 = convertMessages$4(messages);
  if (tmp$1) {
    tmp.messages = tmp$1[0];
  }
  if (columnExtensions) {
    tmp.columnExtensions = columnExtensions[0];
  }
  var tmp$2 = Js_option.map(Js_boolean.to_js_boolean, columnTogglingEnabled);
  if (tmp$2) {
    tmp.columnTogglingEnabled = tmp$2[0];
  }
  return ReasonReact.wrapJsForReason(TableColumnVisibility.default, tmp, children);
}

var TableColumnVisibility$1 = /* module */[
  /* convertMessages */convertMessages$4,
  /* convertRhhd */convertRhhd,
  /* make */make$8
];

var jsMapperConstantArray$2 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rbgpToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$2);
}

function align_rbgpFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$2, param);
}

var jsMapperConstantArray$3 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rw5lToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$3);
}

function align_rw5lFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$3, param);
}

var jsMapperConstantArray$4 = /* array */[
  /* tuple */[
    -322412134,
    "cancel"
  ],
  /* tuple */[
    -71113705,
    "commit"
  ],
  /* tuple */[
    3254785,
    "add"
  ],
  /* tuple */[
    527250507,
    "delete"
  ],
  /* tuple */[
    770176554,
    "edit"
  ]
];

function id_rpbaToJs(param) {
  return Js_mapperRt.binarySearch(5, param, jsMapperConstantArray$4);
}

function id_rpbaFromJs(param) {
  return Js_mapperRt.revSearch(5, jsMapperConstantArray$4, param);
}

function convertMessages$5(madeObj) {
  var returnObj = { };
  if (madeObj) {
    var madeObj$1 = madeObj[0];
    returnObj["addCommand"] = madeObj$1["addCommand"];
    returnObj["editCommand"] = madeObj$1["editCommand"];
    returnObj["deleteCommand"] = madeObj$1["deleteCommand"];
    returnObj["commitCommand"] = madeObj$1["commitCommand"];
    returnObj["cancelCommand"] = madeObj$1["cancelCommand"];
  }
  return /* Some */[returnObj];
}

function make$9(cellComponent, headerCellComponent, commandComponent, showAddCommand, showEditCommand, showDeleteCommand, width, messages, children) {
  var tmp = { };
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (headerCellComponent) {
    tmp.headerCellComponent = headerCellComponent[0];
  }
  if (commandComponent) {
    tmp.commandComponent = commandComponent[0];
  }
  var tmp$1 = Js_option.map(Js_boolean.to_js_boolean, showAddCommand);
  if (tmp$1) {
    tmp.showAddCommand = tmp$1[0];
  }
  var tmp$2 = Js_option.map(Js_boolean.to_js_boolean, showEditCommand);
  if (tmp$2) {
    tmp.showEditCommand = tmp$2[0];
  }
  var tmp$3 = Js_option.map(Js_boolean.to_js_boolean, showDeleteCommand);
  if (tmp$3) {
    tmp.showDeleteCommand = tmp$3[0];
  }
  var tmp$4 = Js_option.map(unwrapValue, width);
  if (tmp$4) {
    tmp.width = tmp$4[0];
  }
  var tmp$5 = convertMessages$5(messages);
  if (tmp$5) {
    tmp.messages = tmp$5[0];
  }
  return ReasonReact.wrapJsForReason(TableEditColumn.default, tmp, children);
}

var TableEditColumn$1 = /* module */[
  /* align_rbgpToJs */align_rbgpToJs,
  /* align_rbgpFromJs */align_rbgpFromJs,
  /* align_rw5lToJs */align_rw5lToJs,
  /* align_rw5lFromJs */align_rw5lFromJs,
  /* id_rpbaToJs */id_rpbaToJs,
  /* id_rpbaFromJs */id_rpbaFromJs,
  /* convertMessages */convertMessages$5,
  /* make */make$9
];

var jsMapperConstantArray$5 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rki5ToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$5);
}

function align_rki5FromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$5, param);
}

function make$10(rowHeight, cellComponent, rowComponent, children) {
  var tmp = { };
  var tmp$1 = Js_option.map(unwrapValue, rowHeight);
  if (tmp$1) {
    tmp.rowHeight = tmp$1[0];
  }
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  return ReasonReact.wrapJsForReason(TableEditRow.default, tmp, children);
}

var TableEditRow$1 = /* module */[
  /* align_rki5ToJs */align_rki5ToJs,
  /* align_rki5FromJs */align_rki5FromJs,
  /* make */make$10
];

function convertMessages$6(madeObj) {
  var returnObj = { };
  if (madeObj) {
    returnObj["filterPlaceholder"] = madeObj[0]["filterPlaceholder"];
  }
  return /* Some */[returnObj];
}

var jsMapperConstantArray$6 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_ro1zToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$6);
}

function align_ro1zFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$6, param);
}

function make$11(rowHeight, messages, cellComponent, rowComponent, children) {
  var tmp = { };
  var tmp$1 = Js_option.map(unwrapValue, rowHeight);
  if (tmp$1) {
    tmp.rowHeight = tmp$1[0];
  }
  var tmp$2 = convertMessages$6(messages);
  if (tmp$2) {
    tmp.messages = tmp$2[0];
  }
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  return ReasonReact.wrapJsForReason(TableFilterRow.default, tmp, children);
}

var TableFilterRow$1 = /* module */[
  /* convertMessages */convertMessages$6,
  /* align_ro1zToJs */align_ro1zToJs,
  /* align_ro1zFromJs */align_ro1zFromJs,
  /* make */make$11
];

var jsMapperConstantArray$7 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_ra97ToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$7);
}

function align_ra97FromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$7, param);
}

var jsMapperConstantArray$8 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_ro3qToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$8);
}

function align_ro3qFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$8, param);
}

function convertR5if(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["showWhenGrouped"] = madeObj["showWhenGrouped"];
  return returnObj;
}

function make$12(cellComponent, rowComponent, indentCellComponent, indentColumnWidth, showColumnsWhenGrouped, columnExtensions, children) {
  var tmp = { };
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  if (indentCellComponent) {
    tmp.indentCellComponent = indentCellComponent[0];
  }
  var tmp$1 = Js_option.map(unwrapValue, indentColumnWidth);
  if (tmp$1) {
    tmp.indentColumnWidth = tmp$1[0];
  }
  var tmp$2 = Js_option.map(Js_boolean.to_js_boolean, showColumnsWhenGrouped);
  if (tmp$2) {
    tmp.showColumnsWhenGrouped = tmp$2[0];
  }
  if (columnExtensions) {
    tmp.columnExtensions = columnExtensions[0];
  }
  return ReasonReact.wrapJsForReason(TableGroupRow.default, tmp, children);
}

var TableGroupRow$1 = /* module */[
  /* align_ra97ToJs */align_ra97ToJs,
  /* align_ra97FromJs */align_ra97FromJs,
  /* align_ro3qToJs */align_ro3qToJs,
  /* align_ro3qFromJs */align_ro3qFromJs,
  /* convertR5if */convertR5if,
  /* make */make$12
];

var jsMapperConstantArray$9 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rwo8ToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$9);
}

function align_rwo8FromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$9, param);
}

var jsMapperConstantArray$10 = /* array */[
  /* tuple */[
    3258129,
    "asc"
  ],
  /* tuple */[
    759138929,
    "desc"
  ]
];

function sortingDirection_rse4ToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray$10);
}

function sortingDirection_rse4FromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray$10, param);
}

var jsMapperConstantArray$11 = /* array */[
  /* tuple */[
    3258129,
    "asc"
  ],
  /* tuple */[
    759138929,
    "desc"
  ]
];

function rve5_r93uToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray$11);
}

function rve5_r93uFromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray$11, param);
}

function convertMessages$7(madeObj) {
  var returnObj = { };
  if (madeObj) {
    returnObj["sortingHint"] = madeObj[0]["sortingHint"];
  }
  return /* Some */[returnObj];
}

function make$13(showSortingControls, showGroupingControls, cellComponent, rowComponent, messages, children) {
  var tmp = { };
  var tmp$1 = Js_option.map(Js_boolean.to_js_boolean, showSortingControls);
  if (tmp$1) {
    tmp.showSortingControls = tmp$1[0];
  }
  var tmp$2 = Js_option.map(Js_boolean.to_js_boolean, showGroupingControls);
  if (tmp$2) {
    tmp.showGroupingControls = tmp$2[0];
  }
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  var tmp$3 = convertMessages$7(messages);
  if (tmp$3) {
    tmp.messages = tmp$3[0];
  }
  return ReasonReact.wrapJsForReason(TableHeaderRow.default, tmp, children);
}

var TableHeaderRow$1 = /* module */[
  /* align_rwo8ToJs */align_rwo8ToJs,
  /* align_rwo8FromJs */align_rwo8FromJs,
  /* sortingDirection_rse4ToJs */sortingDirection_rse4ToJs,
  /* sortingDirection_rse4FromJs */sortingDirection_rse4FromJs,
  /* rve5_r93uToJs */rve5_r93uToJs,
  /* rve5_r93uFromJs */rve5_r93uFromJs,
  /* convertMessages */convertMessages$7,
  /* make */make$13
];

var jsMapperConstantArray$12 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rs2bToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$12);
}

function align_rs2bFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$12, param);
}

var jsMapperConstantArray$13 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_r7o6ToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$13);
}

function align_r7o6FromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$13, param);
}

function make$14(contentComponent, toggleCellComponent, cellComponent, rowComponent, toggleColumnWidth, rowHeight, children) {
  var tmp = { };
  if (contentComponent) {
    tmp.contentComponent = contentComponent[0];
  }
  if (toggleCellComponent) {
    tmp.toggleCellComponent = toggleCellComponent[0];
  }
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  var tmp$1 = Js_option.map(unwrapValue, toggleColumnWidth);
  if (tmp$1) {
    tmp.toggleColumnWidth = tmp$1[0];
  }
  var tmp$2 = Js_option.map(unwrapValue, rowHeight);
  if (tmp$2) {
    tmp.rowHeight = tmp$2[0];
  }
  return ReasonReact.wrapJsForReason(TableRowDetail.default, tmp, children);
}

var TableRowDetail$1 = /* module */[
  /* align_rs2bToJs */align_rs2bToJs,
  /* align_rs2bFromJs */align_rs2bFromJs,
  /* align_r7o6ToJs */align_r7o6ToJs,
  /* align_r7o6FromJs */align_r7o6FromJs,
  /* make */make$14
];

var jsMapperConstantArray$14 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_redsToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$14);
}

function align_redsFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$14, param);
}

var jsMapperConstantArray$15 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rtzzToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$15);
}

function align_rtzzFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$15, param);
}

function make$15(headerCellComponent, cellComponent, rowComponent, highlightRow, selectByRowClick, showSelectAll, showSelectionColumn, selectionColumnWidth, children) {
  var tmp = { };
  if (headerCellComponent) {
    tmp.headerCellComponent = headerCellComponent[0];
  }
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  var tmp$1 = Js_option.map(Js_boolean.to_js_boolean, highlightRow);
  if (tmp$1) {
    tmp.highlightRow = tmp$1[0];
  }
  var tmp$2 = Js_option.map(Js_boolean.to_js_boolean, selectByRowClick);
  if (tmp$2) {
    tmp.selectByRowClick = tmp$2[0];
  }
  var tmp$3 = Js_option.map(Js_boolean.to_js_boolean, showSelectAll);
  if (tmp$3) {
    tmp.showSelectAll = tmp$3[0];
  }
  var tmp$4 = Js_option.map(Js_boolean.to_js_boolean, showSelectionColumn);
  if (tmp$4) {
    tmp.showSelectionColumn = tmp$4[0];
  }
  var tmp$5 = Js_option.map(unwrapValue, selectionColumnWidth);
  if (tmp$5) {
    tmp.selectionColumnWidth = tmp$5[0];
  }
  return ReasonReact.wrapJsForReason(TableSelection.default, tmp, children);
}

var TableSelection$1 = /* module */[
  /* align_redsToJs */align_redsToJs,
  /* align_redsFromJs */align_redsFromJs,
  /* align_rtzzToJs */align_rtzzToJs,
  /* align_rtzzFromJs */align_rtzzFromJs,
  /* make */make$15
];

var jsMapperConstantArray$16 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rf4kToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$16);
}

function align_rf4kFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$16, param);
}

var jsMapperConstantArray$17 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rhspToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$17);
}

function align_rhspFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$17, param);
}

var jsMapperConstantArray$18 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rjlgToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$18);
}

function align_rjlgFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$18, param);
}

var jsMapperConstantArray$19 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rrhfToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$19);
}

function align_rrhfFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$19, param);
}

function convertRxbw(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["width"] = madeObj["width"];
  returnObj["align"] = madeObj["align"];
  return returnObj;
}

function convertMessages$8(madeObj) {
  var returnObj = { };
  if (madeObj) {
    returnObj["noData"] = madeObj[0]["noData"];
  }
  return /* Some */[returnObj];
}

function make$16(layoutComponent, tableComponent, headComponent, bodyComponent, containerComponent, cellComponent, rowComponent, noDataCellComponent, noDataRowComponent, stubCellComponent, stubHeaderCellComponent, columnExtensions, messages, fixedHeaderComponent, children) {
  var tmp = { };
  if (layoutComponent) {
    tmp.layoutComponent = layoutComponent[0];
  }
  if (tableComponent) {
    tmp.tableComponent = tableComponent[0];
  }
  if (headComponent) {
    tmp.headComponent = headComponent[0];
  }
  if (bodyComponent) {
    tmp.bodyComponent = bodyComponent[0];
  }
  if (containerComponent) {
    tmp.containerComponent = containerComponent[0];
  }
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  if (noDataCellComponent) {
    tmp.noDataCellComponent = noDataCellComponent[0];
  }
  if (noDataRowComponent) {
    tmp.noDataRowComponent = noDataRowComponent[0];
  }
  if (stubCellComponent) {
    tmp.stubCellComponent = stubCellComponent[0];
  }
  if (stubHeaderCellComponent) {
    tmp.stubHeaderCellComponent = stubHeaderCellComponent[0];
  }
  if (columnExtensions) {
    tmp.columnExtensions = columnExtensions[0];
  }
  var tmp$1 = convertMessages$8(messages);
  if (tmp$1) {
    tmp.messages = tmp$1[0];
  }
  if (fixedHeaderComponent) {
    tmp.fixedHeaderComponent = fixedHeaderComponent[0];
  }
  return ReasonReact.wrapJsForReason(Table.default, tmp, children);
}

var Table$1 = /* module */[
  /* align_rf4kToJs */align_rf4kToJs,
  /* align_rf4kFromJs */align_rf4kFromJs,
  /* align_rhspToJs */align_rhspToJs,
  /* align_rhspFromJs */align_rhspFromJs,
  /* align_rjlgToJs */align_rjlgToJs,
  /* align_rjlgFromJs */align_rjlgFromJs,
  /* align_rrhfToJs */align_rrhfToJs,
  /* align_rrhfFromJs */align_rrhfFromJs,
  /* convertRxbw */convertRxbw,
  /* convertMessages */convertMessages$8,
  /* make */make$16
];

function make$17(rootComponent, flexibleSpaceComponent, children) {
  var tmp = { };
  if (rootComponent) {
    tmp.rootComponent = rootComponent[0];
  }
  if (flexibleSpaceComponent) {
    tmp.flexibleSpaceComponent = flexibleSpaceComponent[0];
  }
  return ReasonReact.wrapJsForReason(Toolbar.default, tmp, children);
}

var Toolbar$1 = /* module */[/* make */make$17];

function convertMessages$9(madeObj) {
  var returnObj = { };
  if (madeObj) {
    returnObj["noData"] = madeObj[0]["noData"];
  }
  return /* Some */[returnObj];
}

function make$18(estimatedRowHeight, height, messages, children) {
  var tmp = { };
  var tmp$1 = Js_option.map(unwrapValue, estimatedRowHeight);
  if (tmp$1) {
    tmp.estimatedRowHeight = tmp$1[0];
  }
  var tmp$2 = Js_option.map(unwrapValue, height);
  if (tmp$2) {
    tmp.height = tmp$2[0];
  }
  var tmp$3 = convertMessages$9(messages);
  if (tmp$3) {
    tmp.messages = tmp$3[0];
  }
  return ReasonReact.wrapJsForReason(VirtualTable.default, tmp, children);
}

var VirtualTable$1 = /* module */[
  /* convertMessages */convertMessages$9,
  /* make */make$18
];

exports.unwrapValue = unwrapValue;
exports.ColumnChooser = ColumnChooser$1;
exports.DragDropProvider = DragDropProvider$1;
exports.Grid = Grid$1;
exports.GroupingPanel = GroupingPanel$1;
exports.PagingPanel = PagingPanel$1;
exports.SearchPanel = SearchPanel$1;
exports.TableColumnReordering = TableColumnReordering$1;
exports.TableColumnResizing = TableColumnResizing$1;
exports.TableColumnVisibility = TableColumnVisibility$1;
exports.TableEditColumn = TableEditColumn$1;
exports.TableEditRow = TableEditRow$1;
exports.TableFilterRow = TableFilterRow$1;
exports.TableGroupRow = TableGroupRow$1;
exports.TableHeaderRow = TableHeaderRow$1;
exports.TableRowDetail = TableRowDetail$1;
exports.TableSelection = TableSelection$1;
exports.Table = Table$1;
exports.Toolbar = Toolbar$1;
exports.VirtualTable = VirtualTable$1;
/* ReasonReact Not a pure module */
