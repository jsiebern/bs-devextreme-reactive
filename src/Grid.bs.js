// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Js_option = require("bs-platform/lib/js/js_option.js");
var Js_boolean = require("bs-platform/lib/js/js_boolean.js");
var Js_mapperRt = require("bs-platform/lib/js/js_mapperRt.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");
var Grid = require("@devexpress/dx-react-grid/Grid");
var Table = require("@devexpress/dx-react-grid/Table");
var Toolbar = require("@devexpress/dx-react-grid/Toolbar");
var PagingPanel = require("@devexpress/dx-react-grid/PagingPanel");
var PagingState = require("@devexpress/dx-react-grid/PagingState");
var SearchPanel = require("@devexpress/dx-react-grid/SearchPanel");
var SearchState = require("@devexpress/dx-react-grid/SearchState");
var TableLayout = require("@devexpress/dx-react-grid/TableLayout");
var CustomPaging = require("@devexpress/dx-react-grid/CustomPaging");
var EditingState = require("@devexpress/dx-react-grid/EditingState");
var SortingState = require("@devexpress/dx-react-grid/SortingState");
var TableEditRow = require("@devexpress/dx-react-grid/TableEditRow");
var ColumnChooser = require("@devexpress/dx-react-grid/ColumnChooser");
var GroupingPanel = require("@devexpress/dx-react-grid/GroupingPanel");
var GroupingState = require("@devexpress/dx-react-grid/GroupingState");
var TableGroupRow = require("@devexpress/dx-react-grid/TableGroupRow");
var CustomGrouping = require("@devexpress/dx-react-grid/CustomGrouping");
var FilteringState = require("@devexpress/dx-react-grid/FilteringState");
var RowDetailState = require("@devexpress/dx-react-grid/RowDetailState");
var SelectionState = require("@devexpress/dx-react-grid/SelectionState");
var TableFilterRow = require("@devexpress/dx-react-grid/TableFilterRow");
var TableHeaderRow = require("@devexpress/dx-react-grid/TableHeaderRow");
var TableRowDetail = require("@devexpress/dx-react-grid/TableRowDetail");
var TableSelection = require("@devexpress/dx-react-grid/TableSelection");
var TableEditColumn = require("@devexpress/dx-react-grid/TableEditColumn");
var DataTypeProvider = require("@devexpress/dx-react-grid/DataTypeProvider");
var DragDropProvider = require("@devexpress/dx-react-grid/DragDropProvider");
var GroupPanelLayout = require("@devexpress/dx-react-grid/GroupPanelLayout");
var IntegratedPaging = require("@devexpress/dx-react-grid/IntegratedPaging");
var IntegratedSorting = require("@devexpress/dx-react-grid/IntegratedSorting");
var StaticTableLayout = require("@devexpress/dx-react-grid/StaticTableLayout");
var IntegratedGrouping = require("@devexpress/dx-react-grid/IntegratedGrouping");
var VirtualTableLayout = require("@devexpress/dx-react-grid/VirtualTableLayout");
var IntegratedFiltering = require("@devexpress/dx-react-grid/IntegratedFiltering");
var IntegratedSelection = require("@devexpress/dx-react-grid/IntegratedSelection");
var TableColumnResizing = require("@devexpress/dx-react-grid/TableColumnResizing");
var TableColumnReordering = require("@devexpress/dx-react-grid/TableColumnReordering");
var TableColumnVisibility = require("@devexpress/dx-react-grid/TableColumnVisibility");

function unwrapValue(param) {
  var variant = param[0];
  if (variant >= 758940238) {
    if (variant !== 770676513) {
      if (variant >= 1034997432) {
        throw [
              Caml_builtin_exceptions.assert_failure,
              [
                "Grid.re",
                21,
                21
              ]
            ];
      } else {
        return param[1];
      }
    } else {
      throw [
            Caml_builtin_exceptions.assert_failure,
            [
              "Grid.re",
              20,
              16
            ]
          ];
    }
  } else if (variant !== -908856609) {
    if (variant >= 737456202) {
      return Js_boolean.to_js_boolean(param[1]);
    } else {
      return param[1];
    }
  } else {
    throw [
          Caml_builtin_exceptions.assert_failure,
          [
            "Grid.re",
            19,
            18
          ]
        ];
  }
}

function convertMessages(madeObj) {
  var returnObj = { };
  if (madeObj) {
    returnObj["showColumnChooser"] = madeObj[0]["showColumnChooser"];
  }
  return /* Some */[returnObj];
}

function make(overlayComponent, containerComponent, itemComponent, toggleButtonComponent, messages, children) {
  var tmp = { };
  if (overlayComponent) {
    tmp.overlayComponent = overlayComponent[0];
  }
  if (containerComponent) {
    tmp.containerComponent = containerComponent[0];
  }
  if (itemComponent) {
    tmp.itemComponent = itemComponent[0];
  }
  if (toggleButtonComponent) {
    tmp.toggleButtonComponent = toggleButtonComponent[0];
  }
  var tmp$1 = convertMessages(messages);
  if (tmp$1) {
    tmp.messages = tmp$1[0];
  }
  return ReasonReact.wrapJsForReason(ColumnChooser.default, tmp, children);
}

var ColumnChooser$1 = /* module */[
  /* convertMessages */convertMessages,
  /* make */make
];

function convertRy5h(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  return returnObj;
}

function make$1(getChildGroups, grouping, expandedGroups, children) {
  var tmp = {
    getChildGroups: getChildGroups
  };
  if (grouping) {
    tmp.grouping = grouping[0];
  }
  if (expandedGroups) {
    tmp.expandedGroups = expandedGroups[0];
  }
  return ReasonReact.wrapJsForReason(CustomGrouping.default, tmp, children);
}

var CustomGrouping$1 = /* module */[
  /* convertRy5h */convertRy5h,
  /* make */make$1
];

function make$2(totalCount, children) {
  var tmp = { };
  var tmp$1 = Js_option.map(unwrapValue, totalCount);
  if (tmp$1) {
    tmp.totalCount = tmp$1[0];
  }
  return ReasonReact.wrapJsForReason(CustomPaging.default, tmp, children);
}

var CustomPaging$1 = /* module */[/* make */make$2];

function make$3(_for, formatterComponent, editorComponent, children) {
  var tmp = {
    for: _for
  };
  if (formatterComponent) {
    tmp.formatterComponent = formatterComponent[0];
  }
  if (editorComponent) {
    tmp.editorComponent = editorComponent[0];
  }
  return ReasonReact.wrapJsForReason(DataTypeProvider.default, tmp, children);
}

var DataTypeProvider$1 = /* module */[/* make */make$3];

function make$4(containerComponent, columnComponent, children) {
  var tmp = { };
  if (containerComponent) {
    tmp.containerComponent = containerComponent[0];
  }
  if (columnComponent) {
    tmp.columnComponent = columnComponent[0];
  }
  return ReasonReact.wrapJsForReason(DragDropProvider.default, tmp, children);
}

var DragDropProvider$1 = /* module */[/* make */make$4];

function convertRtom(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["editingEnabled"] = madeObj["editingEnabled"];
  returnObj["createRowChange"] = madeObj["createRowChange"];
  return returnObj;
}

function convertRhch(madeObj) {
  var returnObj = { };
  returnObj["added"] = madeObj["added"];
  returnObj["changed"] = madeObj["changed"];
  returnObj["deleted"] = madeObj["deleted"];
  return returnObj;
}

function make$5(createRowChange, columnEditingEnabled, columnExtensions, editingRowIds, defaultEditingRowIds, onEditingRowIdsChange, addedRows, defaultAddedRows, onAddedRowsChange, rowChanges, defaultRowChanges, onRowChangesChange, deletedRowIds, defaultDeletedRowIds, onDeletedRowIdsChange, onCommitChanges, children) {
  var tmp = {
    onCommitChanges: onCommitChanges
  };
  if (createRowChange) {
    tmp.createRowChange = createRowChange[0];
  }
  var tmp$1 = Js_option.map(Js_boolean.to_js_boolean, columnEditingEnabled);
  if (tmp$1) {
    tmp.columnEditingEnabled = tmp$1[0];
  }
  if (columnExtensions) {
    tmp.columnExtensions = columnExtensions[0];
  }
  if (editingRowIds) {
    tmp.editingRowIds = editingRowIds[0];
  }
  if (defaultEditingRowIds) {
    tmp.defaultEditingRowIds = defaultEditingRowIds[0];
  }
  if (onEditingRowIdsChange) {
    tmp.onEditingRowIdsChange = onEditingRowIdsChange[0];
  }
  if (addedRows) {
    tmp.addedRows = addedRows[0];
  }
  if (defaultAddedRows) {
    tmp.defaultAddedRows = defaultAddedRows[0];
  }
  if (onAddedRowsChange) {
    tmp.onAddedRowsChange = onAddedRowsChange[0];
  }
  if (rowChanges) {
    tmp.rowChanges = rowChanges[0];
  }
  if (defaultRowChanges) {
    tmp.defaultRowChanges = defaultRowChanges[0];
  }
  if (onRowChangesChange) {
    tmp.onRowChangesChange = onRowChangesChange[0];
  }
  if (deletedRowIds) {
    tmp.deletedRowIds = deletedRowIds[0];
  }
  if (defaultDeletedRowIds) {
    tmp.defaultDeletedRowIds = defaultDeletedRowIds[0];
  }
  if (onDeletedRowIdsChange) {
    tmp.onDeletedRowIdsChange = onDeletedRowIdsChange[0];
  }
  return ReasonReact.wrapJsForReason(EditingState.default, tmp, children);
}

var EditingState$1 = /* module */[
  /* convertRtom */convertRtom,
  /* convertRhch */convertRhch,
  /* make */make$5
];

function convertR5am(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["value"] = madeObj["value"];
  return returnObj;
}

function convertRk3m(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["value"] = madeObj["value"];
  return returnObj;
}

function convertR9n7(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["value"] = madeObj["value"];
  return returnObj;
}

function convertRpl4(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["filteringEnabled"] = madeObj["filteringEnabled"];
  return returnObj;
}

function make$6(filters, defaultFilters, onFiltersChange, columnExtensions, columnFilteringEnabled, children) {
  var tmp = { };
  if (filters) {
    tmp.filters = filters[0];
  }
  if (defaultFilters) {
    tmp.defaultFilters = defaultFilters[0];
  }
  if (onFiltersChange) {
    tmp.onFiltersChange = onFiltersChange[0];
  }
  if (columnExtensions) {
    tmp.columnExtensions = columnExtensions[0];
  }
  var tmp$1 = Js_option.map(Js_boolean.to_js_boolean, columnFilteringEnabled);
  if (tmp$1) {
    tmp.columnFilteringEnabled = tmp$1[0];
  }
  return ReasonReact.wrapJsForReason(FilteringState.default, tmp, children);
}

var FilteringState$1 = /* module */[
  /* convertR5am */convertR5am,
  /* convertRk3m */convertRk3m,
  /* convertR9n7 */convertR9n7,
  /* convertRpl4 */convertRpl4,
  /* make */make$6
];

function convertRklm(madeObj) {
  var returnObj = { };
  returnObj["name"] = madeObj["name"];
  returnObj["title"] = madeObj["title"];
  returnObj["getCellValue"] = madeObj["getCellValue"];
  return returnObj;
}

function make$7(rows, getRowId, getCellValue, columns, rootComponent, children) {
  var tmp = { };
  if (rows) {
    tmp.rows = rows[0];
  }
  if (getRowId) {
    tmp.getRowId = getRowId[0];
  }
  if (getCellValue) {
    tmp.getCellValue = getCellValue[0];
  }
  if (columns) {
    tmp.columns = columns[0];
  }
  if (rootComponent) {
    tmp.rootComponent = rootComponent[0];
  }
  return ReasonReact.wrapJsForReason(Grid.default, tmp, children);
}

var Grid$1 = /* module */[
  /* convertRklm */convertRklm,
  /* make */make$7
];

function convertRnpy(madeObj) {
  var returnObj = { };
  returnObj["column"] = madeObj["column"];
  returnObj["draft"] = madeObj["draft"];
  return returnObj;
}

function make$8(items, onGroup, itemComponent, containerComponent, emptyMessageComponent, draggingEnabled, isColumnGroupingEnabled, onGroupDraft, onGroupDraftCancel, children) {
  var tmp = {
    items: items,
    itemComponent: itemComponent,
    containerComponent: containerComponent,
    emptyMessageComponent: emptyMessageComponent
  };
  if (onGroup) {
    tmp.onGroup = onGroup[0];
  }
  var tmp$1 = Js_option.map(Js_boolean.to_js_boolean, draggingEnabled);
  if (tmp$1) {
    tmp.draggingEnabled = tmp$1[0];
  }
  if (isColumnGroupingEnabled) {
    tmp.isColumnGroupingEnabled = isColumnGroupingEnabled[0];
  }
  if (onGroupDraft) {
    tmp.onGroupDraft = onGroupDraft[0];
  }
  if (onGroupDraftCancel) {
    tmp.onGroupDraftCancel = onGroupDraftCancel[0];
  }
  return ReasonReact.wrapJsForReason(GroupPanelLayout.default, tmp, children);
}

var GroupPanelLayout$1 = /* module */[
  /* convertRnpy */convertRnpy,
  /* make */make$8
];

var jsMapperConstantArray = /* array */[
  /* tuple */[
    3258129,
    "asc"
  ],
  /* tuple */[
    759138929,
    "desc"
  ]
];

function sortingDirection_r1s5ToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray);
}

function sortingDirection_r1s5FromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray, param);
}

var jsMapperConstantArray$1 = /* array */[
  /* tuple */[
    3258129,
    "asc"
  ],
  /* tuple */[
    759138929,
    "desc"
  ]
];

function rlql_ryj7ToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray$1);
}

function rlql_ryj7FromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray$1, param);
}

function convertMessages$1(madeObj) {
  var returnObj = { };
  if (madeObj) {
    returnObj["groupByColumn"] = madeObj[0]["groupByColumn"];
  }
  return /* Some */[returnObj];
}

function make$9(showSortingControls, showGroupingControls, layoutComponent, containerComponent, itemComponent, emptyMessageComponent, messages, children) {
  var tmp = { };
  var tmp$1 = Js_option.map(Js_boolean.to_js_boolean, showSortingControls);
  if (tmp$1) {
    tmp.showSortingControls = tmp$1[0];
  }
  var tmp$2 = Js_option.map(Js_boolean.to_js_boolean, showGroupingControls);
  if (tmp$2) {
    tmp.showGroupingControls = tmp$2[0];
  }
  if (layoutComponent) {
    tmp.layoutComponent = layoutComponent[0];
  }
  if (containerComponent) {
    tmp.containerComponent = containerComponent[0];
  }
  if (itemComponent) {
    tmp.itemComponent = itemComponent[0];
  }
  if (emptyMessageComponent) {
    tmp.emptyMessageComponent = emptyMessageComponent[0];
  }
  var tmp$3 = convertMessages$1(messages);
  if (tmp$3) {
    tmp.messages = tmp$3[0];
  }
  return ReasonReact.wrapJsForReason(GroupingPanel.default, tmp, children);
}

var GroupingPanel$1 = /* module */[
  /* sortingDirection_r1s5ToJs */sortingDirection_r1s5ToJs,
  /* sortingDirection_r1s5FromJs */sortingDirection_r1s5FromJs,
  /* rlql_ryj7ToJs */rlql_ryj7ToJs,
  /* rlql_ryj7FromJs */rlql_ryj7FromJs,
  /* convertMessages */convertMessages$1,
  /* make */make$9
];

function convertRsvv(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  return returnObj;
}

function convertRwit(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  return returnObj;
}

function convertR67e(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  return returnObj;
}

function convertRo0z(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["groupingEnabled"] = madeObj["groupingEnabled"];
  return returnObj;
}

function make$10(grouping, defaultGrouping, onGroupingChange, expandedGroups, defaultExpandedGroups, onExpandedGroupsChange, columnExtensions, columnGroupingEnabled, children) {
  var tmp = { };
  if (grouping) {
    tmp.grouping = grouping[0];
  }
  if (defaultGrouping) {
    tmp.defaultGrouping = defaultGrouping[0];
  }
  if (onGroupingChange) {
    tmp.onGroupingChange = onGroupingChange[0];
  }
  if (expandedGroups) {
    tmp.expandedGroups = expandedGroups[0];
  }
  if (defaultExpandedGroups) {
    tmp.defaultExpandedGroups = defaultExpandedGroups[0];
  }
  if (onExpandedGroupsChange) {
    tmp.onExpandedGroupsChange = onExpandedGroupsChange[0];
  }
  if (columnExtensions) {
    tmp.columnExtensions = columnExtensions[0];
  }
  var tmp$1 = Js_option.map(Js_boolean.to_js_boolean, columnGroupingEnabled);
  if (tmp$1) {
    tmp.columnGroupingEnabled = tmp$1[0];
  }
  return ReasonReact.wrapJsForReason(GroupingState.default, tmp, children);
}

var GroupingState$1 = /* module */[
  /* convertRsvv */convertRsvv,
  /* convertRwit */convertRwit,
  /* convertR67e */convertR67e,
  /* convertRo0z */convertRo0z,
  /* make */make$10
];

function convertRrfq(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["predicate"] = madeObj["predicate"];
  return returnObj;
}

function make$11(columnExtensions, children) {
  var tmp = { };
  if (columnExtensions) {
    tmp.columnExtensions = columnExtensions[0];
  }
  return ReasonReact.wrapJsForReason(IntegratedFiltering.default, tmp, children);
}

var IntegratedFiltering$1 = /* module */[
  /* convertRrfq */convertRrfq,
  /* make */make$11
];

function convertCriteriaReturn(madeObj) {
  var returnObj = { };
  returnObj["key"] = madeObj["key"];
  returnObj["value"] = madeObj["value"];
  return returnObj;
}

function convertRnj5(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["criteria"] = madeObj["criteria"];
  return returnObj;
}

function make$12(columnExtensions, children) {
  var tmp = { };
  if (columnExtensions) {
    tmp.columnExtensions = columnExtensions[0];
  }
  return ReasonReact.wrapJsForReason(IntegratedGrouping.default, tmp, children);
}

var IntegratedGrouping$1 = /* module */[
  /* convertCriteriaReturn */convertCriteriaReturn,
  /* convertRnj5 */convertRnj5,
  /* make */make$12
];

function make$13(children) {
  return ReasonReact.wrapJsForReason(IntegratedPaging.default, { }, children);
}

var IntegratedPaging$1 = /* module */[/* make */make$13];

function make$14(children) {
  return ReasonReact.wrapJsForReason(IntegratedSelection.default, { }, children);
}

var IntegratedSelection$1 = /* module */[/* make */make$14];

function convertRdbu(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["compare"] = madeObj["compare"];
  return returnObj;
}

function make$15(columnExtensions, children) {
  var tmp = { };
  if (columnExtensions) {
    tmp.columnExtensions = columnExtensions[0];
  }
  return ReasonReact.wrapJsForReason(IntegratedSorting.default, tmp, children);
}

var IntegratedSorting$1 = /* module */[
  /* convertRdbu */convertRdbu,
  /* make */make$15
];

function convertMessages$2(madeObj) {
  var returnObj = { };
  if (madeObj) {
    var madeObj$1 = madeObj[0];
    returnObj["showAll"] = madeObj$1["showAll"];
    returnObj["rowsPerPage"] = madeObj$1["rowsPerPage"];
    returnObj["info"] = madeObj$1["info"];
  }
  return /* Some */[returnObj];
}

function make$16(pageSizes, containerComponent, messages, children) {
  var tmp = { };
  if (pageSizes) {
    tmp.pageSizes = pageSizes[0];
  }
  if (containerComponent) {
    tmp.containerComponent = containerComponent[0];
  }
  var tmp$1 = convertMessages$2(messages);
  if (tmp$1) {
    tmp.messages = tmp$1[0];
  }
  return ReasonReact.wrapJsForReason(PagingPanel.default, tmp, children);
}

var PagingPanel$1 = /* module */[
  /* convertMessages */convertMessages$2,
  /* make */make$16
];

function make$17(pageSize, defaultPageSize, onPageSizeChange, currentPage, defaultCurrentPage, onCurrentPageChange, children) {
  var tmp = { };
  var tmp$1 = Js_option.map(unwrapValue, pageSize);
  if (tmp$1) {
    tmp.pageSize = tmp$1[0];
  }
  var tmp$2 = Js_option.map(unwrapValue, defaultPageSize);
  if (tmp$2) {
    tmp.defaultPageSize = tmp$2[0];
  }
  if (onPageSizeChange) {
    tmp.onPageSizeChange = onPageSizeChange[0];
  }
  var tmp$3 = Js_option.map(unwrapValue, currentPage);
  if (tmp$3) {
    tmp.currentPage = tmp$3[0];
  }
  var tmp$4 = Js_option.map(unwrapValue, defaultCurrentPage);
  if (tmp$4) {
    tmp.defaultCurrentPage = tmp$4[0];
  }
  if (onCurrentPageChange) {
    tmp.onCurrentPageChange = onCurrentPageChange[0];
  }
  return ReasonReact.wrapJsForReason(PagingState.default, tmp, children);
}

var PagingState$1 = /* module */[/* make */make$17];

function make$18(expandedRowIds, defaultExpandedRowIds, onExpandedRowIdsChange, children) {
  var tmp = { };
  if (expandedRowIds) {
    tmp.expandedRowIds = expandedRowIds[0];
  }
  if (defaultExpandedRowIds) {
    tmp.defaultExpandedRowIds = defaultExpandedRowIds[0];
  }
  if (onExpandedRowIdsChange) {
    tmp.onExpandedRowIdsChange = onExpandedRowIdsChange[0];
  }
  return ReasonReact.wrapJsForReason(RowDetailState.default, tmp, children);
}

var RowDetailState$1 = /* module */[/* make */make$18];

function convertMessages$3(madeObj) {
  var returnObj = { };
  if (madeObj) {
    returnObj["searchPlaceholder"] = madeObj[0]["searchPlaceholder"];
  }
  return /* Some */[returnObj];
}

function make$19(inputComponent, messages, children) {
  var tmp = { };
  if (inputComponent) {
    tmp.inputComponent = inputComponent[0];
  }
  var tmp$1 = convertMessages$3(messages);
  if (tmp$1) {
    tmp.messages = tmp$1[0];
  }
  return ReasonReact.wrapJsForReason(SearchPanel.default, tmp, children);
}

var SearchPanel$1 = /* module */[
  /* convertMessages */convertMessages$3,
  /* make */make$19
];

function make$20(value, defaultValue, onValueChange, children) {
  var tmp = { };
  if (value) {
    tmp.value = value[0];
  }
  if (defaultValue) {
    tmp.defaultValue = defaultValue[0];
  }
  if (onValueChange) {
    tmp.onValueChange = onValueChange[0];
  }
  return ReasonReact.wrapJsForReason(SearchState.default, tmp, children);
}

var SearchState$1 = /* module */[/* make */make$20];

function make$21(selection, defaultSelection, onSelectionChange, children) {
  var tmp = { };
  if (selection) {
    tmp.selection = selection[0];
  }
  if (defaultSelection) {
    tmp.defaultSelection = defaultSelection[0];
  }
  if (onSelectionChange) {
    tmp.onSelectionChange = onSelectionChange[0];
  }
  return ReasonReact.wrapJsForReason(SelectionState.default, tmp, children);
}

var SelectionState$1 = /* module */[/* make */make$21];

var jsMapperConstantArray$2 = /* array */[
  /* tuple */[
    3258129,
    "asc"
  ],
  /* tuple */[
    759138929,
    "desc"
  ]
];

function direction_r6y3ToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray$2);
}

function direction_r6y3FromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray$2, param);
}

function convertRft5(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["direction"] = madeObj["direction"];
  return returnObj;
}

var jsMapperConstantArray$3 = /* array */[
  /* tuple */[
    3258129,
    "asc"
  ],
  /* tuple */[
    759138929,
    "desc"
  ]
];

function direction_ruw9ToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray$3);
}

function direction_ruw9FromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray$3, param);
}

function convertRfh1(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["direction"] = madeObj["direction"];
  return returnObj;
}

var jsMapperConstantArray$4 = /* array */[
  /* tuple */[
    3258129,
    "asc"
  ],
  /* tuple */[
    759138929,
    "desc"
  ]
];

function direction_rhmoToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray$4);
}

function direction_rhmoFromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray$4, param);
}

function convertR4rs(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["direction"] = madeObj["direction"];
  return returnObj;
}

function convertRut7(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["sortingEnabled"] = madeObj["sortingEnabled"];
  return returnObj;
}

function make$22(sorting, defaultSorting, onSortingChange, columnExtensions, columnSortingEnabled, children) {
  var tmp = { };
  if (sorting) {
    tmp.sorting = sorting[0];
  }
  if (defaultSorting) {
    tmp.defaultSorting = defaultSorting[0];
  }
  if (onSortingChange) {
    tmp.onSortingChange = onSortingChange[0];
  }
  if (columnExtensions) {
    tmp.columnExtensions = columnExtensions[0];
  }
  var tmp$1 = Js_option.map(Js_boolean.to_js_boolean, columnSortingEnabled);
  if (tmp$1) {
    tmp.columnSortingEnabled = tmp$1[0];
  }
  return ReasonReact.wrapJsForReason(SortingState.default, tmp, children);
}

var SortingState$1 = /* module */[
  /* direction_r6y3ToJs */direction_r6y3ToJs,
  /* direction_r6y3FromJs */direction_r6y3FromJs,
  /* convertRft5 */convertRft5,
  /* direction_ruw9ToJs */direction_ruw9ToJs,
  /* direction_ruw9FromJs */direction_ruw9FromJs,
  /* convertRfh1 */convertRfh1,
  /* direction_rhmoToJs */direction_rhmoToJs,
  /* direction_rhmoFromJs */direction_rhmoFromJs,
  /* convertR4rs */convertR4rs,
  /* convertRut7 */convertRut7,
  /* make */make$22
];

function make$23(headerRows, rows, columns, minWidth, containerComponent, tableComponent, headComponent, bodyComponent, rowComponent, cellComponent, children) {
  var tmp = {
    rows: rows,
    columns: columns,
    minWidth: unwrapValue(minWidth),
    containerComponent: containerComponent,
    tableComponent: tableComponent,
    bodyComponent: bodyComponent,
    rowComponent: rowComponent,
    cellComponent: cellComponent
  };
  if (headerRows) {
    tmp.headerRows = headerRows[0];
  }
  if (headComponent) {
    tmp.headComponent = headComponent[0];
  }
  return ReasonReact.wrapJsForReason(StaticTableLayout.default, tmp, children);
}

var StaticTableLayout$1 = /* module */[/* make */make$23];

function make$24(order, defaultOrder, onOrderChange, tableContainerComponent, rowComponent, cellComponent, children) {
  var tmp = { };
  if (order) {
    tmp.order = order[0];
  }
  if (defaultOrder) {
    tmp.defaultOrder = defaultOrder[0];
  }
  if (onOrderChange) {
    tmp.onOrderChange = onOrderChange[0];
  }
  if (tableContainerComponent) {
    tmp.tableContainerComponent = tableContainerComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  return ReasonReact.wrapJsForReason(TableColumnReordering.default, tmp, children);
}

var TableColumnReordering$1 = /* module */[/* make */make$24];

function convertRq55(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["width"] = madeObj["width"];
  return returnObj;
}

function convertRmsi(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["width"] = madeObj["width"];
  return returnObj;
}

function make$25(defaultColumnWidths, columnWidths, onColumnWidthsChange, children) {
  var tmp = { };
  if (defaultColumnWidths) {
    tmp.defaultColumnWidths = defaultColumnWidths[0];
  }
  if (columnWidths) {
    tmp.columnWidths = columnWidths[0];
  }
  if (onColumnWidthsChange) {
    tmp.onColumnWidthsChange = onColumnWidthsChange[0];
  }
  return ReasonReact.wrapJsForReason(TableColumnResizing.default, tmp, children);
}

var TableColumnResizing$1 = /* module */[
  /* convertRq55 */convertRq55,
  /* convertRmsi */convertRmsi,
  /* make */make$25
];

function convertMessages$4(madeObj) {
  var returnObj = { };
  if (madeObj) {
    returnObj["noColumns"] = madeObj[0]["noColumns"];
  }
  return /* Some */[returnObj];
}

function convertR4lz(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["togglingEnabled"] = madeObj["togglingEnabled"];
  return returnObj;
}

function make$26(hiddenColumnNames, defaultHiddenColumnNames, emptyMessageComponent, onHiddenColumnNamesChange, messages, columnExtensions, columnTogglingEnabled, children) {
  var tmp = { };
  if (hiddenColumnNames) {
    tmp.hiddenColumnNames = hiddenColumnNames[0];
  }
  if (defaultHiddenColumnNames) {
    tmp.defaultHiddenColumnNames = defaultHiddenColumnNames[0];
  }
  if (emptyMessageComponent) {
    tmp.emptyMessageComponent = emptyMessageComponent[0];
  }
  if (onHiddenColumnNamesChange) {
    tmp.onHiddenColumnNamesChange = onHiddenColumnNamesChange[0];
  }
  var tmp$1 = convertMessages$4(messages);
  if (tmp$1) {
    tmp.messages = tmp$1[0];
  }
  if (columnExtensions) {
    tmp.columnExtensions = columnExtensions[0];
  }
  var tmp$2 = Js_option.map(Js_boolean.to_js_boolean, columnTogglingEnabled);
  if (tmp$2) {
    tmp.columnTogglingEnabled = tmp$2[0];
  }
  return ReasonReact.wrapJsForReason(TableColumnVisibility.default, tmp, children);
}

var TableColumnVisibility$1 = /* module */[
  /* convertMessages */convertMessages$4,
  /* convertR4lz */convertR4lz,
  /* make */make$26
];

var jsMapperConstantArray$5 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rg9mToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$5);
}

function align_rg9mFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$5, param);
}

var jsMapperConstantArray$6 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rmkzToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$6);
}

function align_rmkzFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$6, param);
}

var jsMapperConstantArray$7 = /* array */[
  /* tuple */[
    -322412134,
    "cancel"
  ],
  /* tuple */[
    -71113705,
    "commit"
  ],
  /* tuple */[
    3254785,
    "add"
  ],
  /* tuple */[
    527250507,
    "delete"
  ],
  /* tuple */[
    770176554,
    "edit"
  ]
];

function id_rhi1ToJs(param) {
  return Js_mapperRt.binarySearch(5, param, jsMapperConstantArray$7);
}

function id_rhi1FromJs(param) {
  return Js_mapperRt.revSearch(5, jsMapperConstantArray$7, param);
}

function convertMessages$5(madeObj) {
  var returnObj = { };
  if (madeObj) {
    var madeObj$1 = madeObj[0];
    returnObj["addCommand"] = madeObj$1["addCommand"];
    returnObj["editCommand"] = madeObj$1["editCommand"];
    returnObj["deleteCommand"] = madeObj$1["deleteCommand"];
    returnObj["commitCommand"] = madeObj$1["commitCommand"];
    returnObj["cancelCommand"] = madeObj$1["cancelCommand"];
  }
  return /* Some */[returnObj];
}

function make$27(cellComponent, headerCellComponent, commandComponent, showAddCommand, showEditCommand, showDeleteCommand, width, messages, children) {
  var tmp = { };
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (headerCellComponent) {
    tmp.headerCellComponent = headerCellComponent[0];
  }
  if (commandComponent) {
    tmp.commandComponent = commandComponent[0];
  }
  var tmp$1 = Js_option.map(Js_boolean.to_js_boolean, showAddCommand);
  if (tmp$1) {
    tmp.showAddCommand = tmp$1[0];
  }
  var tmp$2 = Js_option.map(Js_boolean.to_js_boolean, showEditCommand);
  if (tmp$2) {
    tmp.showEditCommand = tmp$2[0];
  }
  var tmp$3 = Js_option.map(Js_boolean.to_js_boolean, showDeleteCommand);
  if (tmp$3) {
    tmp.showDeleteCommand = tmp$3[0];
  }
  var tmp$4 = Js_option.map(unwrapValue, width);
  if (tmp$4) {
    tmp.width = tmp$4[0];
  }
  var tmp$5 = convertMessages$5(messages);
  if (tmp$5) {
    tmp.messages = tmp$5[0];
  }
  return ReasonReact.wrapJsForReason(TableEditColumn.default, tmp, children);
}

var TableEditColumn$1 = /* module */[
  /* align_rg9mToJs */align_rg9mToJs,
  /* align_rg9mFromJs */align_rg9mFromJs,
  /* align_rmkzToJs */align_rmkzToJs,
  /* align_rmkzFromJs */align_rmkzFromJs,
  /* id_rhi1ToJs */id_rhi1ToJs,
  /* id_rhi1FromJs */id_rhi1FromJs,
  /* convertMessages */convertMessages$5,
  /* make */make$27
];

var jsMapperConstantArray$8 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rhyqToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$8);
}

function align_rhyqFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$8, param);
}

function make$28(rowHeight, cellComponent, rowComponent, children) {
  var tmp = { };
  var tmp$1 = Js_option.map(unwrapValue, rowHeight);
  if (tmp$1) {
    tmp.rowHeight = tmp$1[0];
  }
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  return ReasonReact.wrapJsForReason(TableEditRow.default, tmp, children);
}

var TableEditRow$1 = /* module */[
  /* align_rhyqToJs */align_rhyqToJs,
  /* align_rhyqFromJs */align_rhyqFromJs,
  /* make */make$28
];

function convertMessages$6(madeObj) {
  var returnObj = { };
  if (madeObj) {
    returnObj["filterPlaceholder"] = madeObj[0]["filterPlaceholder"];
  }
  return /* Some */[returnObj];
}

var jsMapperConstantArray$9 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rxszToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$9);
}

function align_rxszFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$9, param);
}

function make$29(rowHeight, messages, cellComponent, rowComponent, children) {
  var tmp = { };
  var tmp$1 = Js_option.map(unwrapValue, rowHeight);
  if (tmp$1) {
    tmp.rowHeight = tmp$1[0];
  }
  var tmp$2 = convertMessages$6(messages);
  if (tmp$2) {
    tmp.messages = tmp$2[0];
  }
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  return ReasonReact.wrapJsForReason(TableFilterRow.default, tmp, children);
}

var TableFilterRow$1 = /* module */[
  /* convertMessages */convertMessages$6,
  /* align_rxszToJs */align_rxszToJs,
  /* align_rxszFromJs */align_rxszFromJs,
  /* make */make$29
];

var jsMapperConstantArray$10 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rlenToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$10);
}

function align_rlenFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$10, param);
}

var jsMapperConstantArray$11 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rwnpToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$11);
}

function align_rwnpFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$11, param);
}

function convertRbic(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["showWhenGrouped"] = madeObj["showWhenGrouped"];
  return returnObj;
}

function make$30(cellComponent, rowComponent, indentCellComponent, indentColumnWidth, showColumnsWhenGrouped, columnExtensions, children) {
  var tmp = { };
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  if (indentCellComponent) {
    tmp.indentCellComponent = indentCellComponent[0];
  }
  var tmp$1 = Js_option.map(unwrapValue, indentColumnWidth);
  if (tmp$1) {
    tmp.indentColumnWidth = tmp$1[0];
  }
  var tmp$2 = Js_option.map(Js_boolean.to_js_boolean, showColumnsWhenGrouped);
  if (tmp$2) {
    tmp.showColumnsWhenGrouped = tmp$2[0];
  }
  if (columnExtensions) {
    tmp.columnExtensions = columnExtensions[0];
  }
  return ReasonReact.wrapJsForReason(TableGroupRow.default, tmp, children);
}

var TableGroupRow$1 = /* module */[
  /* align_rlenToJs */align_rlenToJs,
  /* align_rlenFromJs */align_rlenFromJs,
  /* align_rwnpToJs */align_rwnpToJs,
  /* align_rwnpFromJs */align_rwnpFromJs,
  /* convertRbic */convertRbic,
  /* make */make$30
];

var jsMapperConstantArray$12 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rzwqToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$12);
}

function align_rzwqFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$12, param);
}

var jsMapperConstantArray$13 = /* array */[
  /* tuple */[
    3258129,
    "asc"
  ],
  /* tuple */[
    759138929,
    "desc"
  ]
];

function sortingDirection_rmo9ToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray$13);
}

function sortingDirection_rmo9FromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray$13, param);
}

var jsMapperConstantArray$14 = /* array */[
  /* tuple */[
    3258129,
    "asc"
  ],
  /* tuple */[
    759138929,
    "desc"
  ]
];

function r57a_r2y4ToJs(param) {
  return Js_mapperRt.binarySearch(2, param, jsMapperConstantArray$14);
}

function r57a_r2y4FromJs(param) {
  return Js_mapperRt.revSearch(2, jsMapperConstantArray$14, param);
}

function convertMessages$7(madeObj) {
  var returnObj = { };
  if (madeObj) {
    returnObj["sortingHint"] = madeObj[0]["sortingHint"];
  }
  return /* Some */[returnObj];
}

function make$31(showSortingControls, showGroupingControls, cellComponent, rowComponent, messages, children) {
  var tmp = { };
  var tmp$1 = Js_option.map(Js_boolean.to_js_boolean, showSortingControls);
  if (tmp$1) {
    tmp.showSortingControls = tmp$1[0];
  }
  var tmp$2 = Js_option.map(Js_boolean.to_js_boolean, showGroupingControls);
  if (tmp$2) {
    tmp.showGroupingControls = tmp$2[0];
  }
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  var tmp$3 = convertMessages$7(messages);
  if (tmp$3) {
    tmp.messages = tmp$3[0];
  }
  return ReasonReact.wrapJsForReason(TableHeaderRow.default, tmp, children);
}

var TableHeaderRow$1 = /* module */[
  /* align_rzwqToJs */align_rzwqToJs,
  /* align_rzwqFromJs */align_rzwqFromJs,
  /* sortingDirection_rmo9ToJs */sortingDirection_rmo9ToJs,
  /* sortingDirection_rmo9FromJs */sortingDirection_rmo9FromJs,
  /* r57a_r2y4ToJs */r57a_r2y4ToJs,
  /* r57a_r2y4FromJs */r57a_r2y4FromJs,
  /* convertMessages */convertMessages$7,
  /* make */make$31
];

function make$32(columns, minColumnWidth, layoutComponent, children) {
  return ReasonReact.wrapJsForReason(TableLayout.default, {
              columns: columns,
              minColumnWidth: unwrapValue(minColumnWidth),
              layoutComponent: layoutComponent
            }, children);
}

var TableLayout$1 = /* module */[/* make */make$32];

var jsMapperConstantArray$15 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rb9rToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$15);
}

function align_rb9rFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$15, param);
}

var jsMapperConstantArray$16 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_r372ToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$16);
}

function align_r372FromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$16, param);
}

function make$33(contentComponent, toggleCellComponent, cellComponent, rowComponent, toggleColumnWidth, rowHeight, children) {
  var tmp = { };
  if (contentComponent) {
    tmp.contentComponent = contentComponent[0];
  }
  if (toggleCellComponent) {
    tmp.toggleCellComponent = toggleCellComponent[0];
  }
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  var tmp$1 = Js_option.map(unwrapValue, toggleColumnWidth);
  if (tmp$1) {
    tmp.toggleColumnWidth = tmp$1[0];
  }
  var tmp$2 = Js_option.map(unwrapValue, rowHeight);
  if (tmp$2) {
    tmp.rowHeight = tmp$2[0];
  }
  return ReasonReact.wrapJsForReason(TableRowDetail.default, tmp, children);
}

var TableRowDetail$1 = /* module */[
  /* align_rb9rToJs */align_rb9rToJs,
  /* align_rb9rFromJs */align_rb9rFromJs,
  /* align_r372ToJs */align_r372ToJs,
  /* align_r372FromJs */align_r372FromJs,
  /* make */make$33
];

var jsMapperConstantArray$17 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rqm0ToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$17);
}

function align_rqm0FromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$17, param);
}

var jsMapperConstantArray$18 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_r29fToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$18);
}

function align_r29fFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$18, param);
}

function make$34(headerCellComponent, cellComponent, rowComponent, highlightRow, selectByRowClick, showSelectAll, showSelectionColumn, selectionColumnWidth, children) {
  var tmp = { };
  if (headerCellComponent) {
    tmp.headerCellComponent = headerCellComponent[0];
  }
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  var tmp$1 = Js_option.map(Js_boolean.to_js_boolean, highlightRow);
  if (tmp$1) {
    tmp.highlightRow = tmp$1[0];
  }
  var tmp$2 = Js_option.map(Js_boolean.to_js_boolean, selectByRowClick);
  if (tmp$2) {
    tmp.selectByRowClick = tmp$2[0];
  }
  var tmp$3 = Js_option.map(Js_boolean.to_js_boolean, showSelectAll);
  if (tmp$3) {
    tmp.showSelectAll = tmp$3[0];
  }
  var tmp$4 = Js_option.map(Js_boolean.to_js_boolean, showSelectionColumn);
  if (tmp$4) {
    tmp.showSelectionColumn = tmp$4[0];
  }
  var tmp$5 = Js_option.map(unwrapValue, selectionColumnWidth);
  if (tmp$5) {
    tmp.selectionColumnWidth = tmp$5[0];
  }
  return ReasonReact.wrapJsForReason(TableSelection.default, tmp, children);
}

var TableSelection$1 = /* module */[
  /* align_rqm0ToJs */align_rqm0ToJs,
  /* align_rqm0FromJs */align_rqm0FromJs,
  /* align_r29fToJs */align_r29fToJs,
  /* align_r29fFromJs */align_r29fFromJs,
  /* make */make$34
];

var jsMapperConstantArray$19 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rdm5ToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$19);
}

function align_rdm5FromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$19, param);
}

var jsMapperConstantArray$20 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_r9quToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$20);
}

function align_r9quFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$20, param);
}

var jsMapperConstantArray$21 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_rvv4ToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$21);
}

function align_rvv4FromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$21, param);
}

var jsMapperConstantArray$22 = /* array */[
  /* tuple */[
    -57574468,
    "right"
  ],
  /* tuple */[
    847852583,
    "left"
  ],
  /* tuple */[
    980392437,
    "center"
  ]
];

function align_reizToJs(param) {
  return Js_mapperRt.binarySearch(3, param, jsMapperConstantArray$22);
}

function align_reizFromJs(param) {
  return Js_mapperRt.revSearch(3, jsMapperConstantArray$22, param);
}

function convertR8lf(madeObj) {
  var returnObj = { };
  returnObj["columnName"] = madeObj["columnName"];
  returnObj["width"] = madeObj["width"];
  returnObj["align"] = madeObj["align"];
  return returnObj;
}

function convertMessages$8(madeObj) {
  var returnObj = { };
  if (madeObj) {
    returnObj["noData"] = madeObj[0]["noData"];
  }
  return /* Some */[returnObj];
}

function make$35(layoutComponent, tableComponent, headComponent, bodyComponent, containerComponent, cellComponent, rowComponent, noDataCellComponent, noDataRowComponent, stubCellComponent, stubHeaderCellComponent, columnExtensions, messages, fixedHeaderComponent, children) {
  var tmp = { };
  if (layoutComponent) {
    tmp.layoutComponent = layoutComponent[0];
  }
  if (tableComponent) {
    tmp.tableComponent = tableComponent[0];
  }
  if (headComponent) {
    tmp.headComponent = headComponent[0];
  }
  if (bodyComponent) {
    tmp.bodyComponent = bodyComponent[0];
  }
  if (containerComponent) {
    tmp.containerComponent = containerComponent[0];
  }
  if (cellComponent) {
    tmp.cellComponent = cellComponent[0];
  }
  if (rowComponent) {
    tmp.rowComponent = rowComponent[0];
  }
  if (noDataCellComponent) {
    tmp.noDataCellComponent = noDataCellComponent[0];
  }
  if (noDataRowComponent) {
    tmp.noDataRowComponent = noDataRowComponent[0];
  }
  if (stubCellComponent) {
    tmp.stubCellComponent = stubCellComponent[0];
  }
  if (stubHeaderCellComponent) {
    tmp.stubHeaderCellComponent = stubHeaderCellComponent[0];
  }
  if (columnExtensions) {
    tmp.columnExtensions = columnExtensions[0];
  }
  var tmp$1 = convertMessages$8(messages);
  if (tmp$1) {
    tmp.messages = tmp$1[0];
  }
  if (fixedHeaderComponent) {
    tmp.fixedHeaderComponent = fixedHeaderComponent[0];
  }
  return ReasonReact.wrapJsForReason(Table.default, tmp, children);
}

var Table$1 = /* module */[
  /* align_rdm5ToJs */align_rdm5ToJs,
  /* align_rdm5FromJs */align_rdm5FromJs,
  /* align_r9quToJs */align_r9quToJs,
  /* align_r9quFromJs */align_r9quFromJs,
  /* align_rvv4ToJs */align_rvv4ToJs,
  /* align_rvv4FromJs */align_rvv4FromJs,
  /* align_reizToJs */align_reizToJs,
  /* align_reizFromJs */align_reizFromJs,
  /* convertR8lf */convertR8lf,
  /* convertMessages */convertMessages$8,
  /* make */make$35
];

function make$36(rootComponent, flexibleSpaceComponent, children) {
  var tmp = { };
  if (rootComponent) {
    tmp.rootComponent = rootComponent[0];
  }
  if (flexibleSpaceComponent) {
    tmp.flexibleSpaceComponent = flexibleSpaceComponent[0];
  }
  return ReasonReact.wrapJsForReason(Toolbar.default, tmp, children);
}

var Toolbar$1 = /* module */[/* make */make$36];

function make$37(minWidth, height, headerRows, rows, columns, cellComponent, rowComponent, bodyComponent, headComponent, tableComponent, headTableComponent, containerComponent, estimatedRowHeight, children) {
  var tmp = {
    minWidth: unwrapValue(minWidth),
    height: unwrapValue(height),
    rows: rows,
    columns: columns,
    cellComponent: cellComponent,
    rowComponent: rowComponent,
    bodyComponent: bodyComponent,
    tableComponent: tableComponent,
    containerComponent: containerComponent,
    estimatedRowHeight: unwrapValue(estimatedRowHeight)
  };
  if (headerRows) {
    tmp.headerRows = headerRows[0];
  }
  if (headComponent) {
    tmp.headComponent = headComponent[0];
  }
  if (headTableComponent) {
    tmp.headTableComponent = headTableComponent[0];
  }
  return ReasonReact.wrapJsForReason(VirtualTableLayout.default, tmp, children);
}

var VirtualTableLayout$1 = /* module */[/* make */make$37];

exports.unwrapValue = unwrapValue;
exports.ColumnChooser = ColumnChooser$1;
exports.CustomGrouping = CustomGrouping$1;
exports.CustomPaging = CustomPaging$1;
exports.DataTypeProvider = DataTypeProvider$1;
exports.DragDropProvider = DragDropProvider$1;
exports.EditingState = EditingState$1;
exports.FilteringState = FilteringState$1;
exports.Grid = Grid$1;
exports.GroupPanelLayout = GroupPanelLayout$1;
exports.GroupingPanel = GroupingPanel$1;
exports.GroupingState = GroupingState$1;
exports.IntegratedFiltering = IntegratedFiltering$1;
exports.IntegratedGrouping = IntegratedGrouping$1;
exports.IntegratedPaging = IntegratedPaging$1;
exports.IntegratedSelection = IntegratedSelection$1;
exports.IntegratedSorting = IntegratedSorting$1;
exports.PagingPanel = PagingPanel$1;
exports.PagingState = PagingState$1;
exports.RowDetailState = RowDetailState$1;
exports.SearchPanel = SearchPanel$1;
exports.SearchState = SearchState$1;
exports.SelectionState = SelectionState$1;
exports.SortingState = SortingState$1;
exports.StaticTableLayout = StaticTableLayout$1;
exports.TableColumnReordering = TableColumnReordering$1;
exports.TableColumnResizing = TableColumnResizing$1;
exports.TableColumnVisibility = TableColumnVisibility$1;
exports.TableEditColumn = TableEditColumn$1;
exports.TableEditRow = TableEditRow$1;
exports.TableFilterRow = TableFilterRow$1;
exports.TableGroupRow = TableGroupRow$1;
exports.TableHeaderRow = TableHeaderRow$1;
exports.TableLayout = TableLayout$1;
exports.TableRowDetail = TableRowDetail$1;
exports.TableSelection = TableSelection$1;
exports.Table = Table$1;
exports.Toolbar = Toolbar$1;
exports.VirtualTableLayout = VirtualTableLayout$1;
/* ReasonReact Not a pure module */
